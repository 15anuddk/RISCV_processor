$date
	Tue Oct 14 22:40:32 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module IF_tb $end
$var wire 32 ! instruction [31:0] $end
$var wire 32 " instr [31:0] $end
$var wire 32 # PC_new [31:0] $end
$var wire 32 $ PC_n [31:0] $end
$var wire 32 % PC_in [31:0] $end
$var reg 1 & clk $end
$var reg 1 ' reset $end
$scope module PC_add $end
$var wire 32 ( PC_new [31:0] $end
$var wire 32 ) PC [31:0] $end
$upscope $end
$scope module i_m $end
$var wire 32 * address [31:0] $end
$var reg 32 + instruction [31:0] $end
$upscope $end
$scope module program_counter $end
$var wire 32 , PC_next [31:0] $end
$var wire 1 & clk $end
$var wire 1 ' reset $end
$var reg 32 - PC [31:0] $end
$upscope $end
$scope module uut $end
$var wire 32 . PC_new [31:0] $end
$var wire 1 & clk $end
$var wire 32 / instruction [31:0] $end
$var wire 1 ' reset $end
$var reg 32 0 PC_n [31:0] $end
$var reg 32 1 instr [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
b0 /
bx .
bx -
bx ,
b0 +
bx *
bx )
bx (
1'
0&
bx %
bx $
bx #
bx "
b0 !
$end
#10
b10100000000000100010011 !
b10100000000000100010011 +
b10100000000000100010011 /
b100 #
b100 (
b100 ,
b100 .
b0 %
b0 )
b0 *
b0 -
b0 $
b0 0
b0 "
b0 1
1&
#20
0&
0'
#30
b101000000000000110010011 !
b101000000000000110010011 +
b101000000000000110010011 /
b100 $
b100 0
b10100000000000100010011 "
b10100000000000100010011 1
b1000 #
b1000 (
b1000 ,
b1000 .
b100 %
b100 )
b100 *
b100 -
1&
#40
0&
#50
b10001000100011 !
b10001000100011 +
b10001000100011 /
b1100 #
b1100 (
b1100 ,
b1100 .
b1000 %
b1000 )
b1000 *
b1000 -
b1000 $
b1000 0
b101000000000000110010011 "
b101000000000000110010011 1
1&
#60
0&
#70
b1000000010000000100011 !
b1000000010000000100011 +
b1000000010000000100011 /
b1100 $
b1100 0
b10001000100011 "
b10001000100011 1
b10000 #
b10000 (
b10000 ,
b10000 .
b1100 %
b1100 )
b1100 *
b1100 -
1&
#80
0&
#90
b1100000010000010100011 !
b1100000010000010100011 +
b1100000010000010100011 /
b10100 #
b10100 (
b10100 ,
b10100 .
b10000 %
b10000 )
b10000 *
b10000 -
b10000 $
b10000 0
b1000000010000000100011 "
b1000000010000000100011 1
1&
#100
0&
#110
b10000100000011 !
b10000100000011 +
b10000100000011 /
b10100 $
b10100 0
b1100000010000010100011 "
b1100000010000010100011 1
b11000 #
b11000 (
b11000 ,
b11000 .
b10100 %
b10100 )
b10100 *
b10100 -
1&
#120
0&
#130
b10000000010000110000011 !
b10000000010000110000011 +
b10000000010000110000011 /
b11100 #
b11100 (
b11100 ,
b11100 .
b11000 %
b11000 )
b11000 *
b11000 -
b11000 $
b11000 0
b10000100000011 "
b10000100000011 1
1&
#140
0&
#150
b1100010000001010110011 !
b1100010000001010110011 +
b1100010000001010110011 /
b11100 $
b11100 0
b10000000010000110000011 "
b10000000010000110000011 1
b100000 #
b100000 (
b100000 ,
b100000 .
b11100 %
b11100 )
b11100 *
b11100 -
1&
#160
0&
#170
b1000000001100011000001100110011 !
b1000000001100011000001100110011 +
b1000000001100011000001100110011 /
b100100 #
b100100 (
b100100 ,
b100100 .
b100000 %
b100000 )
b100000 *
b100000 -
b100000 $
b100000 0
b1100010000001010110011 "
b1100010000001010110011 1
1&
#180
0&
#190
bx !
bx +
bx /
b100100 $
b100100 0
b1000000001100011000001100110011 "
b1000000001100011000001100110011 1
b101000 #
b101000 (
b101000 ,
b101000 .
b100100 %
b100100 )
b100100 *
b100100 -
1&
#200
0&
#210
b101100 #
b101100 (
b101100 ,
b101100 .
b101000 %
b101000 )
b101000 *
b101000 -
b101000 $
b101000 0
bx "
bx 1
1&
#220
0&
#230
b101100 $
b101100 0
b110000 #
b110000 (
b110000 ,
b110000 .
b101100 %
b101100 )
b101100 *
b101100 -
1&
#240
0&
#250
b110100 #
b110100 (
b110100 ,
b110100 .
b110000 %
b110000 )
b110000 *
b110000 -
b110000 $
b110000 0
1&
#260
0&
#270
b110100 $
b110100 0
b111000 #
b111000 (
b111000 ,
b111000 .
b110100 %
b110100 )
b110100 *
b110100 -
1&
#280
0&
#290
b111100 #
b111100 (
b111100 ,
b111100 .
b111000 %
b111000 )
b111000 *
b111000 -
b111000 $
b111000 0
1&
#300
0&
#310
b111100 $
b111100 0
b1000000 #
b1000000 (
b1000000 ,
b1000000 .
b111100 %
b111100 )
b111100 *
b111100 -
1&
#320
0&
#330
b1000100 #
b1000100 (
b1000100 ,
b1000100 .
b1000000 %
b1000000 )
b1000000 *
b1000000 -
b1000000 $
b1000000 0
1&
#340
0&
#350
b1000100 $
b1000100 0
b1001000 #
b1001000 (
b1001000 ,
b1001000 .
b1000100 %
b1000100 )
b1000100 *
b1000100 -
1&
#360
0&
#370
b1001100 #
b1001100 (
b1001100 ,
b1001100 .
b1001000 %
b1001000 )
b1001000 *
b1001000 -
b1001000 $
b1001000 0
1&
#380
0&
#390
b1001100 $
b1001100 0
b1010000 #
b1010000 (
b1010000 ,
b1010000 .
b1001100 %
b1001100 )
b1001100 *
b1001100 -
1&
#400
0&
#410
b1010100 #
b1010100 (
b1010100 ,
b1010100 .
b1010000 %
b1010000 )
b1010000 *
b1010000 -
b1010000 $
b1010000 0
1&
#420
0&
#430
b1010100 $
b1010100 0
b1011000 #
b1011000 (
b1011000 ,
b1011000 .
b1010100 %
b1010100 )
b1010100 *
b1010100 -
1&
#440
0&
#450
b1011100 #
b1011100 (
b1011100 ,
b1011100 .
b1011000 %
b1011000 )
b1011000 *
b1011000 -
b1011000 $
b1011000 0
1&
#460
0&
#470
b1011100 $
b1011100 0
b1100000 #
b1100000 (
b1100000 ,
b1100000 .
b1011100 %
b1011100 )
b1011100 *
b1011100 -
1&
#480
0&
#490
b1100100 #
b1100100 (
b1100100 ,
b1100100 .
b1100000 %
b1100000 )
b1100000 *
b1100000 -
b1100000 $
b1100000 0
1&
#500
0&
#510
b1100100 $
b1100100 0
b1101000 #
b1101000 (
b1101000 ,
b1101000 .
b1100100 %
b1100100 )
b1100100 *
b1100100 -
1&
#520
0&
